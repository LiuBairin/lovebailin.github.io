import{d as t,o as p,c,a as e,b as o,_ as u}from"./app-6cb5fdbe.js";import{B as l}from"./BlTitle-e6ef2f67.js";const i={class:"write markdown-body"},k=o(`<h2 id="es2016(es7)-%E6%96%B0%E7%89%B9%E6%80%A7" tabindex="-1">ES2016(ES7) 新特性</h2><h3 id="array.prototype.includes" tabindex="-1">Array.prototype.includes</h3><p>用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 <code class="">true</code>，否则返回 <code class="">false</code>。</p><pre class="language-js"><code class="language-js"><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><p>在这之前，我们通常会通过 <code class="">Array.prototype.indexOf</code> 来判断。</p><pre class="language-javascript"><code class="language-javascript"><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">// true</span>
</code></pre><p>唯一的区别是 <code class="">includes()</code> 方法能找到 <code class="">NaN</code>，而 <code class="">indexOf()</code> 不行。</p><pre class="language-javascript"><code class="language-javascript"><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">NaN</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">NaN</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// -1</span>
</code></pre><h3 id="exponentiation-operator-%E6%B1%82%E5%86%A5%E8%BF%90%E7%AE%97" tabindex="-1">Exponentiation Operator 求冥运算</h3><pre class="language-javascript"><code class="language-javascript"><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">3</span> <span class="token comment">// 2*2*2=8</span>
Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// 2*2*2=8</span>
</code></pre>`,10),_={title:"ES2016(ES7) 新特性",date:1678536552e3,category:["ecma","js"]},x="",r=t({__name:"es7",setup(d,{expose:n}){const s="ES2016(ES7) 新特性",a=["ecma","js"];return n({frontmatter:{title:"ES2016(ES7) 新特性",date:1678536552e3,category:["ecma","js"]},excerpt:void 0}),(g,f)=>(p(),c("div",i,[e(l,{title:s,date:1678536552e3,category:a}),k]))}}),N=u(r,[["__file","C:/Users/44513/Desktop/blog/docs/ecma/es7.md"]]);export{N as default,x as excerpt,_ as frontmatter};
